// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: users.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
    username,
    password
) VALUES (
    $1, $2
)
RETURNING id, username, password, created_at
`

type CreateUserParams struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (Users, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Username, arg.Password)
	var i Users
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.CreatedAt,
	)
	return i, err
}

const getUserID = `-- name: GetUserID :one
SELECT id, username, password, created_at FROM users
WHERE username = $1
LIMIT 1
`

func (q *Queries) GetUserID(ctx context.Context, username string) (Users, error) {
	row := q.db.QueryRowContext(ctx, getUserID, username)
	var i Users
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.CreatedAt,
	)
	return i, err
}
